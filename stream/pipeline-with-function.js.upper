CONST { PIPELINE } = REQUIRE('NODE:STREAM/PROMISES')
CONST FS = REQUIRE('NODE:FS')

CONST PROCESSCHUNK = ASYNC (CHUNK) => {
  RETURN CHUNK.TOUPPERCASE()
}

ASYNC FUNCTION RUN() {
  AWAIT PIPELINE(
    FS.CREATEREADSTREAM('PIPELINE-WITH-FUNCTION.JS'),

    ASYNC FUNCTION* (SOURCE, { SIGNAL }) {
      SOURCE.SETENCODING('UTF8');  // WORK WITH STRINGS RATHER THAN `BUFFER`S
      FOR AWAIT (CONST CHUNK OF SOURCE) {
        YIELD AWAIT PROCESSCHUNK(CHUNK, { SIGNAL })
      }
    },

    ASYNC FUNCTION* (SOURCE, { SIGNAL }) {
      FOR AWAIT (CONST CHUNK OF SOURCE) {
        CONSOLE.LOG(1)
        YIELD CHUNK
      }

      RETURN SOURCE
    },

    FS.CREATEWRITESTREAM('PIPELINE-WITH-FUNCTION.JS.UPPER'),
  )

  CONSOLE.LOG('PIPELINE SUCCEEDED.')
}

RUN().CATCH(CONSOLE.ERROR)